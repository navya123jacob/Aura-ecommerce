<%- include('../layouts/header') %>

<%- include('../layouts/Login/loginHeader') %>

<div class="login-page bg-image pt-8 pb-8 pt-md-12 pb-md-12 pt-lg-17 pb-lg-17" style="background-image: url('/assets/images/backgrounds/login-bg.jpg')">
    <div class="container">
        <div class="form-box" style="background-color: rgba(255, 255, 255, 0.5);">
            <div class="form-tab">
                <h3>OTP Verification</h3>
                <div class="tab-content">
                    <div class="tab-pane fade show active" id="register-2" role="tabpanel" aria-labelledby="register-tab-2">
                        <form action="/verifyOTP" style="color: black;" method="POST">
                            <div class="form-group">
                                <label for="otp">Enter 4-digit OTP</label>
                                <input type="text" class="form-control otp-box" id="otp" name="otp" maxlength="4" pattern="\d{4}" title="Please enter a 4-digit OTP" required>
                                
                     

                            </div><!-- End .form-group -->


                            <div class="form-footer">
                                <button type="submit" class="btn btn-outline-dark-2">
                                    <span>VERIFY OTP</span>
                                    <i class="icon-long-arrow-right"></i>
                                </button>
                            </div><!-- End .form-footer -->
                        </form>
                        <div class="form-choice">
                            <p>If you do not have an account</p>
                            <!-- Remove the G Register button -->
                        </div><!-- End .form-choice -->
                    </div><!-- .End .tab-pane -->
                </div><!-- End .tab-content -->
            </div><!-- End .form-tab -->
            <h6 class="text-danger"><%=message%></h6>

            <a href="/resendOTP?userId=<%=userId%>" class="text-primary">resend otp</a>
            <h6 id="timer-message" class="text-danger"><%=message%></h6>
        </div><!-- End .form-box -->
        
    </div><!-- End .container -->
</div><!-- End .login-page section-bg -->
</main><!-- End .main -->


<button id="scroll-top" title="Back to Top"><i class="icon-arrow-up"></i></button>

<%- include('../layouts/Login/LoginMob') %>



<!-- Plugins JS File -->
<script src="assets/js/jquery.min.js"></script>
<script src="assets/js/bootstrap.bundle.min.js"></script>
<script src="assets/js/jquery.hoverIntent.min.js"></script>
<script src="assets/js/jquery.waypoints.min.js"></script>
<script src="assets/js/superfish.min.js"></script>
<script src="assets/js/owl.carousel.min.js"></script>

<!-- Main JS File -->
<script src="assets/js/main.js"></script>


<script>
    // Function to update the timer display
    function updateTimer(minutes, seconds) {
        document.getElementById('timer-message').textContent = `Session expires in ${minutes}m ${seconds}s`;
    }

    // Function to destroy the session via AJAX
    function destroySession() {
        // Assuming you have access to the userId
        const userId = '<%= userId %>';

        // Send an AJAX request to destroy the session
        fetch(`/destroySession?userId=${userId}`, {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
            },
            // Include any additional data if required
            // body: JSON.stringify({ /* additional data */ }),
        })
        .then((response) => response.json())
        .then((data) => {
            console.log(data);
        })
        .catch((error) => {
            console.error('Error destroying session:', error);
        });
    }

    // Set the timer for 2 minutes
    const durationInMinutes = 2;
    const durationInMilliseconds = durationInMinutes * 60 * 1000;

    // Set up the timer
    let timer = durationInMilliseconds;
    const countdownInterval = setInterval(() => {
        const minutes = Math.floor((timer % (1000 * 60 * 60)) / (1000 * 60));
        const seconds = Math.floor((timer % (1000 * 60)) / 1000);

        updateTimer(minutes, seconds);

        if (timer <= 0) {
            // Timer expired, destroy the session
            destroySession();

            // Clear the interval to stop the countdown
            clearInterval(countdownInterval);
        }

        timer -= 1000;
    }, 1000);
</script>
</body>

<!-- molla/login.html  22 Nov 2019 10:04:03 GMT -->
</html>

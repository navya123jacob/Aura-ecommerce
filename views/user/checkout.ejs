<%- include('../layouts/header') %>
<%- include('../layouts/Login/loginHeader') %>   
        <main class="main">
        	<div class="page-header text-center" style="background-image: url('assets/images/checkout2.jpg'); background-size: cover; height: 30vh;">
        		<div class="container">
        			<h1 class="page-title">Checkout</span></h1>
        		</div><!-- End .container -->
        	</div><!-- End .page-header -->
            <nav aria-label="breadcrumb" class="breadcrumb-nav">
                <div class="container">
                    <ol class="breadcrumb">
                        <li class="breadcrumb-item"><a href="index.html">Home</a></li>
                        <li class="breadcrumb-item"><a href="/cart">Cart</a></li>
                        <li class="breadcrumb-item active" aria-current="/checkout">Checkout</li>
                    </ol>
                </div><!-- End .container -->
            </nav><!-- End .breadcrumb-nav -->

            <div class="page-content">
            	<div class="checkout" >
	                <div class="container" >
            			<div class="checkout-discount">
            			</div><!-- End .checkout-discount -->
            			<form id="checkoutform" >
		                	<div class="row"  >
		                		<div class="col-lg-9">
		                			<h2 class="checkout-title">Billing Details</h2><!-- End .checkout-title -->
		                				<div class="row">
		                					<div class="form-group" id="selectaddress" >
												<label for="existingAddresses">Select Existing Address:</label>
												<select id="existingAddresses" name="existingAddress" class="form-control">
													<% if (c == 1) { %>
														<% myuser.addressField.forEach(address => { %>
															<option value="<%= address._id %>">
																<%= address.name %>,<%= address.phone %>, <%= address.address %>, <%= address.district %>, <%= address.state %>, <%= address.pincode %>
															</option>
														<% }); %>
													<% } else { %>
														<option value="" disabled>No existing addresses</option>
													<% } %>
												</select>
                                                <span id="addressError" class="text-danger"></span>
											</div>
		                				</div><!-- End .row -->
										<button type="button" class="btn btn-primary" data-toggle="modal" data-target="#addAddressModal">
											Add New Address
										</button>
                                        
                                        <div class="cart-bottom mt-5">
                                            <div class="cart-discount">
                                                <form action="#">
                                                    <div class="input-group">
                                                        <input type="text" class="form-control" id="couponCodeInput" name="couponCodeInput" placeholder="Coupon code" <% if (applied_coupon &&(!couponmessage)) { %> value="<%= applied_coupon %>" readonly <% } %>>
                                                        <div class="input-group-append">
                                                            <button class="btn btn-outline-primary-2" type="button" id="openCouponDropdown" onclick="couponcheck(document.getElementById('couponCodeInput').value)"><i class="icon-long-arrow-right"></i></button>
                                                           
                                                        </div><!-- .End .input-group-append -->
                                                        
                                                    </div><!-- End .input-group -->
                                                    
                                        
                                                    <div class="dropdown" id="couponDropdown">
                                                        <button class="btn btn-secondary dropdown-toggle" type="button" id="couponDropdownButton" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                                                            Select a Coupon
                                                        </button>
                                                        <div class="dropdown-menu" aria-labelledby="couponDropdownButton">
                                                            <% coupons.forEach(function(coupon) { %>
                                                                <a class="dropdown-item" href="#" onclick="return selectCoupon('<%= coupon.couponCode %>', <%= coupon.discountPercent %>, <%= coupon.minAmount %>, event)">
                                                                    <strong><%= coupon.couponCode %></strong><br><%= coupon.couponDescription %><br> Discount of <%= coupon.discountPercent %>% above â‚¹<%= coupon.minAmount %>
                                                                </a>
                                                            <% }); %>
                                                        </div>
                                                    </div>
                                                </form>
                                            </div><!-- End .cart-discount -->
                                        </div><!-- End .cart-bottom -->
                                        
            					
		                		</div><!-- End .col-lg-9 -->
                                
		                		<aside class="col-lg-3">
		                			<div class="summary">
		                				<h3 class="summary-title">Your Order</h3><!-- End .summary-title -->
                                       
		                				<table class="table table-summary" id="toload">
                                           
                                            <thead>
                                                <tr>
                                                    <th>Product</th>
                                                    
                                                    <th>Total</th>
                                                    
                                                </tr>
                                            </thead>
                                            <tbody >
                                                <% let i=0%>
                                                <% if (b  > 0) { %>
                                                    <% usercart.Products.forEach(product => { %>
                                                        <tr>
                                                            <td><a href="#"><%= product.products.name %></a></td>
                                                            <td>$<%= totalproprice[i] %></td>
                                                        </tr>
                                                        <% i++%>
                                                    <% }); %>
                                                    
                                                    <tr class="summary-subtotal">
                                                        <td>Subtotal:</td>
                                                        <td>$<%= Total %></td>
                                                        
                                                    </tr>
                                                    <tr>
                                                        <td>Shipping:</td>
                                                        <td>$<%= shipping %></td>
                                                    </tr>
                                                    <tr class="summary-total" >
                                                        <td>Total:</td>
                                                        <td>$<%= grandtotal %></td>
                                                        
                                                    </tr>
                                                    <tr>
                                                        <% if (applied_coupon) { %>
                                                            <td>Coupon Applied</td>
                                                            <% if (!couponmessage) { %>
                                                                <td><%= applied_coupon %></td>
                                                            <% } else { %>
                                                                <td>None(<%= couponmessage %>)</td>
                                                            <% } %>
                                                        <% } %>
                                                    </tr>
                                                    
                                                <% } else { %>
                                                    <tr>
                                                        <td colspan="2">Your cart is empty</td>
                                                    </tr>
                                                <% } %>
                                               
                                            </tbody>
                                        </table>
                                    
		                				<div class="accordion-summary" id="accordion-payment">
										   
                                            <label for="paymentOption">Select Payment Option:</label>
                                            <select id="paymentOption" name="paymentOption" class="form-control">
                                              <option value="cashOnDelivery">Cash on Delivery</option>
                                              <option value="razorpay">Razor pay</option>
                                              <option value="wallet">Wallet</option>
                                             
                                            </select>
                                        	</div><!-- End .accordion -->

		                				<button type="submit" class="btn btn-outline-primary-2 btn-order btn-block">
		                					Place order
		                				</button>
		                			</div><!-- End .summary -->
		                		</aside><!-- End .col-lg-3 -->
		                	</div><!-- End .row -->
            			</form>
	                </div><!-- End .container -->
                </div><!-- End .checkout -->
            </div><!-- End .page-content -->
        </main><!-- End .main -->

		<!-- Add Address Modal -->
<div class="modal fade" id="addAddressModal" tabindex="-1" role="dialog" aria-labelledby="addAddressModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="addAddressModalLabel">Add New Address</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
			<div class="modal-body">
				<!-- Address Form -->
				<form id="addAddressForm">
    <!-- Name -->
    <div class="form-group m-5">
        <label for="addressName">Name</label>
        <input type="text" class="form-control" id="addressName" name="addressName" required>
        <div class="text-danger" id="errorName"></div>
    </div>

    <!-- Phone -->
    <div class="form-group m-5">
        <label for="addressPhone">Phone</label>
        <input type="tel" class="form-control" id="addressPhone" name="addressPhone" required>
        <div class="text-danger" id="errorPhone"></div>
    </div>

    <!-- Address -->
    <div class="form-group m-5">
        <label for="addressDetails">Address</label>
        <textarea class="form-control" id="addressDetails" name="addressDetails" rows="3" required></textarea>
        <div class="text-danger" id="errorDetails"></div>
    </div>

    <!-- District -->
    <div class="form-group m-5">
        <label for="addressDistrict">District</label>
        <input type="text" class="form-control" id="addressDistrict" name="addressDistrict" required>
        <div class="text-danger" id="errorDistrict"></div>
    </div>

    <!-- State -->
    <div class="form-group m-5">
        <label for="addressState">State</label>
	    <select class="form-control" id="addressState" name="addressState" required>
        <option value="" disabled selected>Select State</option>
        <option value="Andhra Pradesh">Andhra Pradesh</option>
        <option value="Arunachal Pradesh">Arunachal Pradesh</option>
        <option value="Assam">Assam</option>
        <option value="Bihar">Bihar</option>
        <option value="Chhattisgarh">Chhattisgarh</option>
        <option value="Goa">Goa</option>
        <option value="Gujarat">Gujarat</option>
        <option value="Haryana">Haryana</option>
        <option value="Himachal Pradesh">Himachal Pradesh</option>
        <option value="Jharkhand">Jharkhand</option>
        <option value="Karnataka">Karnataka</option>
        <option value="Kerala">Kerala</option>
        <option value="Madhya Pradesh">Madhya Pradesh</option>
        <option value="Maharashtra">Maharashtra</option>
        <option value="Manipur">Manipur</option>
        <option value="Meghalaya">Meghalaya</option>
        <option value="Mizoram">Mizoram</option>
        <option value="Nagaland">Nagaland</option>
        <option value="Odisha">Odisha</option>
        <option value="Punjab">Punjab</option>
        <option value="Rajasthan">Rajasthan</option>
        <option value="Sikkim">Sikkim</option>
        <option value="Tamil Nadu">Tamil Nadu</option>
        <option value="Telangana">Telangana</option>
        <option value="Tripura">Tripura</option>
        <option value="Uttar Pradesh">Uttar Pradesh</option>
        <option value="Uttarakhand">Uttarakhand</option>
        <option value="West Bengal">West Bengal</option>
    </select>
 <div class="text-danger" id="errorState"></div>
    </div>

    <!-- Pincode -->
    <div class="form-group m-5">
        <label for="addressPincode">Pincode</label>
        <input type="text" class="form-control" id="addressPincode" name="addressPincode" required>
        <div class="text-danger" id="errorPincode"></div>
    </div>

    <button type="button" class="btn btn-primary m-5" onclick="submitForm()">Save Address</button>
</form>
				<h6 class="text-success" id="message"></h6>
			</div>
		</div>
		</div>
		</div>
<script src="https://checkout.razorpay.com/v1/checkout.js"></script>

<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
	
<script>

	//  globally
    const digitRegex = /\d/;
    // Handle form submission
    document.getElementById('addAddressForm').addEventListener('submit', function (event) {
        event.preventDefault();
        // Add your form submission logic here

        // Close the modal after form submission
        $('#addAddressModal').modal('hide');
    });

	function submitForm() {
        // Reset error messages
        resetErrors();

        // Validate inputs
        if (!validateName()) return;
        if (!validatePhone()) return;
        if (!validateAddressDetails()) return;
        if (!validateDistrict()) return;
        if (!validateState()) return;
        if (!validatePincode()) return;

        // Collect form data
        const formData = {
            addressName: document.getElementById('addressName').value,
            addressPhone: document.getElementById('addressPhone').value,
            addressDetails: document.getElementById('addressDetails').value,
            addressDistrict: document.getElementById('addressDistrict').value,
            addressState: document.getElementById('addressState').value,
            addressPincode: document.getElementById('addressPincode').value
           
        };

        
        fetch('/submit-address', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
            },
            body: JSON.stringify(formData),
        })
        .then(response => response.json())
        .then((data) => {
            if (data.success == true) {
                $('#selectaddress').load('/checkout #selectaddress')
                document.getElementById('message').innerText = "Address added successfully";
            } else {
                alert('Failed to add address');
            }
        })
        .catch(error => console.error('Error:', error));
    }

    function resetErrors() {
        document.getElementById('errorName').innerText = '';
        document.getElementById('errorPhone').innerText = '';
        document.getElementById('errorDetails').innerText = '';
        document.getElementById('errorDistrict').innerText = '';
        document.getElementById('errorState').innerText = '';
        document.getElementById('errorPincode').innerText = '';
    }

    function validateName() {
        const name = document.getElementById('addressName').value.trim();
        if (!name) {
            document.getElementById('errorName').innerText = 'Name is required';
            return false;
        }
        return true;
    }

    function validatePhone() {
    const phone = document.getElementById('addressPhone').value.trim();
    const phoneRegex = /^\d{10}$/; // Validates 10 digits

    if (!phone) {
        document.getElementById('errorPhone').innerText = 'Phone is required';
        return false;
    }

    if (!phoneRegex.test(phone)) {
        document.getElementById('errorPhone').innerText = 'Invalid phone number. It should be 10 digits.';
        return false;
    }

    return true;
}

    function validateAddressDetails() {
        const details = document.getElementById('addressDetails').value.trim();
        if (!details) {
            document.getElementById('errorDetails').innerText = 'Address is required';
            return false;
        }
        return true;
    }

    function validateDistrict() {
        const district = document.getElementById('addressDistrict').value.trim();
        if (!district) {
            document.getElementById('errorDistrict').innerText = 'District is required';
            return false;
        }

		 // Validate no digits in district
		 if (digitRegex.test(district)) {

			document.getElementById('errorDistrict').innerText = 'District should not contain digits';
            return false;
		 }
        return true;
    }
function validateState() {
    const state = document.getElementById('addressState').value.trim();
    if (!state) {
        document.getElementById('errorState').innerText = 'State is required';
        return false;
    }
    // Validate no digits in state
    if (digitRegex.test(state)) {
        document.getElementById('errorState').innerText = 'State should not contain digits';
        return false;
    }
    return true;
}

function validatePincode() {
    const pincode = document.getElementById('addressPincode').value.trim();
    if (!pincode) {
        document.getElementById('errorPincode').innerText = 'Pincode is required';
        return false;
    }
    // Validate 5-digit pincode
    const pincodeRegex = /^\d{6}$/;
    if (!pincodeRegex.test(pincode)) { 
        document.getElementById('errorPincode').innerText = 'Invalid pincode (6 digits required)';
        return false;
    }
    return true;
}



function selectCoupon(couponCode, discountPercent, minAmount, event) {
        var couponInput = document.getElementById('couponCodeInput');
        var couponDropdownButton = document.getElementById('couponDropdownButton');

        couponInput.value = couponCode;
        couponDropdownButton.textContent = couponCode; 
        document.getElementById('couponDropdown').classList.remove('show');

       
        console.log(`Selected coupon ${couponCode} with ${discountPercent}% discount above â‚¹${minAmount}`);

       
        event.preventDefault();
        
    }

    document.getElementById('openCouponDropdown').addEventListener('click', function () {
        document.getElementById('couponDropdown').classList.toggle('show');
    });

    window.addEventListener('click', function (event) {
        if (!event.target.matches('#openCouponDropdown') && !event.target.matches('.dropdown-menu a')) {
            document.getElementById('couponDropdown').classList.remove('show');
        }
    });

    function couponcheck(couponCode) {
       console.log(couponCode)
       $('#toload').load(`/checkout?couponapplied=${couponCode} #toload `)
    }


    //RAZOR PAY 
    var orderId ;
    
    document.getElementById('checkoutform').addEventListener('submit', (e) => {
        
    e.preventDefault();
    const paymentOption = document.getElementById('paymentOption').value;
    const existingAddress = document.getElementById('existingAddresses').value;
    const couponCodeInput = document.getElementById('couponCodeInput').value;
    const addressError = document.getElementById('addressError');

    if (existingAddress === "") {
        addressError.textContent = "Please select an existing address or add a new one.";
        return false;
    } else {
        addressError.textContent = "";
    }

        const data = {
    paymentOption: paymentOption,
    existingAddress: existingAddress,
    couponCodeInput: couponCodeInput
};


fetch('/placeorder', {
    method: 'POST',
    body: JSON.stringify(data),
    headers: {
        'Content-Type': 'application/json',
    },
})
.then(response => {
        if (!response.ok) {
            throw new Error('Network response was not ok');
        }
        return response.json();
    })
    .then(data => {
        let difference=data.diff
    if (data.success === 'cod') {
        // COD
        window.location.href = `/orderplaced?orderid=${data.oid}`;
    } else if (data.success === 'wal') {
        if (data.check === true) {
            window.location.href = `/orderplaced?orderid=${data.oid}`;
        } else {
            // Display SweetAlert when there's not enough money in the wallet
            Swal.fire({
                icon: 'warning',
                title: 'Insufficient Funds',
                text: `You don't have enough money in your wallet. You only have $${data.wallet}.`,
                showCancelButton: true,
                confirmButtonText: 'Split Payment with RazorPay',
                cancelButtonText: 'Cancel',
            }).then((result) => {
                if (result.isConfirmed) {
                   


//SPLIT PAYMENT
             let newdata={difference:data.diff,currentid:data.orderid}  
             console.log(newdata)    
                    fetch('/splitorder', {
    method: 'POST',
    body: JSON.stringify(newdata),
    headers: {
        'Content-Type': 'application/json',
    },
})
.then(response => {
        if (!response.ok) {
            throw new Error('Network response was not ok');
        }
        return response.json();
    })
    .then(data => {razorpayPayment(data)})
    .catch(error => {
      console.error('Error:', error);
    });
                    
      
                } else {
    // User clicked Cancel
    Swal.fire({
        icon: 'error',
        title: 'Payment canceled',
        text: 'You have canceled the payment.',
    });
}
            });
        }
    }
        else {
            // RazorPay
            razorpayPayment(data)
        }
    })
    .catch(error => {
       
        alert('Fetch request failed: ' + error.message);
    });
});
  

function razorpayPayment(order)
{
    console.log(order)

    var options = {
    "key": "rzp_test_rhkvfmHNrTHBBX", // Enter the Key ID generated from the Dashboard
    "amount": (order.amount), // Amount is in currency subunits. Default currency is INR. Hence, 50000 refers to 50000 paise
    "currency": "INR",
    "name": "AURA",
    "description": "Test Transaction",
    "image": "/assets/images/logo.jpg",
    "order_id": order.id, //This is a sample Order ID. Pass the `id` obtained in the response of Step 1
    "handler": function (response){
        
        verifyPayment(response,order)
    },
    "prefill": {
        "name": "Gaurav Kumar",
        "email": "gaurav.kumar@example.com",
        "contact": "9000090000"
    },
    "notes": {
        "address": "Razorpay Corporate Office"
    },
    "theme": {
        "color": "#ffffff"
    }
};
var rzp1 = new Razorpay(options);
rzp1.open();
}

function verifyPayment(payment, order) {
    console.log('inside')
    fetch('/verify-payment', {
        method: 'POST',
        headers: {
            'Content-Type': 'application/json',
        },
        body: JSON.stringify({ payment, order }),
    })
    .then(response => {
        if (!response.ok) {
            throw new Error('Network response was not ok');
        }
        return response.json();
    })
    .then(data => {
        console.log(data.success)
        if (data.success == true) {
            // Show success alert
            Swal.fire({
                icon: 'success',
                title: 'Payment Successful',
                showConfirmButton: false,
                timer: 1500,
            }).then(() => {
                // Redirect to '/orderplaced' after the alert
                window.location.href = `/orderplaced?orderid=${data.orderid}`;
            });
        } else {
            // Show error alert
            Swal.fire({
                icon: 'error',
                title: 'Payment has failed',
                showConfirmButton: false,
                timer: 1500,
            });
        }
    })
    .catch(error => {
        console.error('Error:', error);
        // Show error alert in case of network or server error
        Swal.fire({
            icon: 'error',
            title: 'An error occurred',
            text: 'Please try again later.',
        });
    });
}

    </script>





        <%- include('../layouts/footer') %>
<%- include('../layouts/Login/LoginMob') %>